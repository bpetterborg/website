<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Ben Petterborg</title>
        <link>https://ben-p.dev/</link>
        <description>Recent content on Ben Petterborg</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <lastBuildDate>Mon, 11 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ben-p.dev/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Devlog(s): Vex-based &#34;Roomba&#34;</title>
        <link>https://ben-p.dev/p/vex-vacuum/</link>
        <pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ben-p.dev/p/vex-vacuum/</guid>
        <description>&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#introduction&#34; &gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#hardware&#34; &gt;Hardware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#software&#34; &gt;Software&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#10/10&#34; &gt;10/10&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I am building a roomba-like &amp;ldquo;vacuum&amp;rdquo; based on Vex hardware. It&amp;rsquo;s not really a
vacuum, but a very strong magnet to pick up small pieces of metal off of the
STEM lab floor.&lt;/p&gt;
&lt;p&gt;The point of this is to learn all sorts of technologies relating to robotics,
but also to struture a large program.&lt;/p&gt;
&lt;p&gt;As far as the point of me logging this, it is more for myself. I will already
be documenting this in a journal, so I may as well share my solutions with
other people.&lt;/p&gt;
&lt;h2 id=&#34;hardware&#34;&gt;Hardware&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ll add a diagram and pictures later, it is too much of a work-in-progress
right now.&lt;/p&gt;
&lt;h3 id=&#34;parts&#34;&gt;Parts&lt;/h3&gt;
&lt;p&gt;I&amp;rsquo;ll update this list as I go, expect this to change. It is currently
incomplete.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;2x Vex 393 Motor, with standard gearing&lt;/li&gt;
&lt;li&gt;2x Vex MC29 motor controller&lt;/li&gt;
&lt;li&gt;Raspberry Pi 3B&lt;/li&gt;
&lt;li&gt;5V step-down converter&lt;/li&gt;
&lt;li&gt;Vex 7.2V 3000mAH battery&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;how-its-all-connected&#34;&gt;How it&amp;rsquo;s all connected&lt;/h3&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;I&amp;rsquo;ll add a diagram later.&lt;/p&gt;
&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Same thing here.&lt;/p&gt;
&lt;p&gt;You can view code on
&lt;a class=&#34;link&#34; href=&#34;https://github.com/bpetterborg/vex_vacuum&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;my github repo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;del&gt;The Raspberry Pi serves as the upper computer, and the Vex brain the lower
computer. The Pi does more of the high-level work, such as mapping, image
processing, and positioning. The Vex brain does more of the lower-level tasks
such as getting data from the sensors (sonar, collision detection), and
controlling the motors.&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;Due to the poor documentation of Vex&amp;rsquo;s hardware, I will be doing it solely on
the RPi. It is less interesting but ehh, it&amp;rsquo;s easier.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll add some more details later, if you are &lt;em&gt;that&lt;/em&gt; interested, check the repo.&lt;/p&gt;
&lt;h2 id=&#34;1010&#34;&gt;10/10&lt;/h2&gt;
&lt;h3 id=&#34;current-progress&#34;&gt;Current Progress&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Started building the robot&lt;/li&gt;
&lt;li&gt;Working on code
&lt;ul&gt;
&lt;li&gt;Motor control (motors.py)
&lt;ul&gt;
&lt;li&gt;Mostly finished&lt;/li&gt;
&lt;li&gt;Unsure about interfacing with the MC29s, but it&amp;rsquo;s a good start.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tasks&#34;&gt;Tasks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Finish building the robot&lt;/li&gt;
&lt;li&gt;Figure out batteries
&lt;ul&gt;
&lt;li&gt;Get the stuff to wire them&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Finish motor control code&lt;/li&gt;
&lt;li&gt;Test motor control code&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1115&#34;&gt;11/15&lt;/h2&gt;
&lt;h3 id=&#34;current-progress-1&#34;&gt;Current Progress&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Finalised hardware design mostly&lt;/li&gt;
&lt;li&gt;Wired everything&lt;/li&gt;
&lt;li&gt;Figure out how vex sonar sensors work&lt;/li&gt;
&lt;li&gt;In progress of rewriting motor control library&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tasks-1&#34;&gt;Tasks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Add retaining clips to Dupont connectors&lt;/li&gt;
&lt;li&gt;Continue rewriting motor control library&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Will be focusing more on coding, specifically for the motors&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;1117&#34;&gt;11/17&lt;/h2&gt;
&lt;h3 id=&#34;current-progress-2&#34;&gt;Current Progress&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Continue work on motor control&lt;/li&gt;
&lt;li&gt;Figured how to do motor configuration &lt;a class=&#34;link&#34; href=&#34;https://github.com/bpetterborg/pi_vex_393/commit/6163e12a382989c79ed2783d0b1c3f74e182110f&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;(#6163e12)&lt;/a&gt; and &lt;a class=&#34;link&#34; href=&#34;https://github.com/bpetterborg/pi_vex_393/commit/4f87c6644f9e28cfce13796882a5131a016911f4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;(#4f87c66)&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Use a &lt;code&gt;*.json&lt;/code&gt; file&lt;/li&gt;
&lt;li&gt;Make an attribute for the motor&lt;/li&gt;
&lt;li&gt;Put individual motor config variables in the motor attribute&lt;/li&gt;
&lt;li&gt;Put like-motor variables in a separate config to avoid repeating yourself&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tasks-2&#34;&gt;Tasks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Add in motor control functions from old code&lt;/li&gt;
&lt;li&gt;Figure out how to get status messages in a sane way&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Pull Images Directly from NOAA Weather Satellites</title>
        <link>https://ben-p.dev/p/apt-reception/</link>
        <pubDate>Wed, 12 May 2021 20:00:00 -0400</pubDate>
        
        <guid>https://ben-p.dev/p/apt-reception/</guid>
        <description>&lt;img src="https://ben-p.dev/p/apt-reception/header.jpg" alt="Featured image of post Pull Images Directly from NOAA Weather Satellites" /&gt;&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#introduction&#34; &gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#getting-started&#34; &gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#receiving&#34; &gt;Receiving&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#decoding&#34; &gt;Decoding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#what-to-do-next&#34; &gt;What to do Next&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#additional-resources&#34; &gt;Additional Resources&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;NOAA has weather satellites that are easy to receive with basic and inexpensive
equipment. This guide will show how to receive and decode the downlink of these
satellites.&lt;/p&gt;
&lt;p&gt;Roscosmos also operates METEOR satellites, which are relatively easy to receive
and decode, which can be done with the same hardware, however this guide will
not detail how to do this.&lt;/p&gt;
&lt;p&gt;We will be using NOAA-15, NOAA-18, and NOAA-19, on the APT downlink as these
are analog FM with a Î» = ~2.2 meters, which is very easy to work with.&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;
&lt;h3 id=&#34;software&#34;&gt;Software&lt;/h3&gt;
&lt;p&gt;You will need an SDR program, like &lt;a class=&#34;link&#34; href=&#34;https://cubicsdr.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;CubicSDR&lt;/a&gt;
(which I will be using for this), however other programs, such as
&lt;a class=&#34;link&#34; href=&#34;https://gqrx.dk/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GQRX&lt;/a&gt;, &lt;a class=&#34;link&#34; href=&#34;https://airspy.com/download/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SDR#&lt;/a&gt;,
&lt;a class=&#34;link&#34; href=&#34;https://github.com/AlexandreRouma/SDRPlusPlus&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SDR++&lt;/a&gt;,
or &lt;a class=&#34;link&#34; href=&#34;https://batchdrake.github.io/SigDigger/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SigDigger&lt;/a&gt; will also work.&lt;/p&gt;
&lt;p&gt;If you are using an Android phone or tablet, I recommend
&lt;a class=&#34;link&#34; href=&#34;https://play.google.com/store/apps/details?id=com.mantz_it.rfanalyzer&amp;amp;hl=en_US&amp;amp;gl=US&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RF-Analyzer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You will also need a program to decode the audio. I will use
&lt;a class=&#34;link&#34; href=&#34;https://noaa-apt.mbernardi.com.ar/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;NOAA APT&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt;
&lt;p&gt;I recommend the
&lt;a class=&#34;link&#34; href=&#34;https://www.rtl-sdr.com/buy-rtl-sdr-dvb-t-dongles/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RTL-SDR kit&lt;/a&gt;, it as a
adjustable and portable dipole antenna, an RG-174 extension cable, and the
dongle itself.&lt;/p&gt;
&lt;p&gt;You will also need a laptop, an Android phone, or a tablet. Brighter screens
are better since you will be outside.&lt;/p&gt;
&lt;h2 id=&#34;receieving&#34;&gt;Receieving&lt;/h2&gt;
&lt;p&gt;A few minutes before the satellite will be above, setup your antenna. Each
element of the dipole should be ~53cm long, 120Â° apart, with &amp;lsquo;V&amp;rsquo; facing south.
The center conductor of the coax should be connected to the element facing
right. If it&amp;rsquo;s not, simply flip the antenna over.&lt;/p&gt;
&lt;p&gt;Open CubicSDR and select
RTL2832U, RTL-SDR, or something else that starts with &amp;lsquo;Realtek&amp;rsquo;. Tune your
receiver to the appropriate satellite, per the table below.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Satellite&lt;/th&gt;
&lt;th&gt;Freq. (MHz)&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;NOAA-15&lt;/td&gt;
&lt;td&gt;137.61&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NOAA-18&lt;/td&gt;
&lt;td&gt;137.91&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;NOAA-19&lt;/td&gt;
&lt;td&gt;137.1&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Set the demodulator to WFM (Wide FM), and the receive bandwidth to ~40kHz, to
account for doppler shift.&lt;/p&gt;
&lt;p&gt;Under recording, set the path, and the squelch to &amp;lsquo;Record Always&amp;rsquo;. Begin the
recording ~1 minute before the satellite will pass over. It&amp;rsquo;ll take ~15min, so
have something to keep yourself occupied.&lt;/p&gt;
&lt;p&gt;Once the satellite passes over the horizon and the signal fades away, you can
go ahead and stop the recording.&lt;/p&gt;
&lt;h2 id=&#34;decoding&#34;&gt;Decoding&lt;/h2&gt;
&lt;p&gt;Open NOAA APT and open your file. You can skip through the rest of the menus,
then save the image.&lt;/p&gt;
&lt;p&gt;Congrats! You&amp;rsquo;ve pulled images directly from weather satellites in orbit!&lt;/p&gt;
&lt;h2 id=&#34;what-to-do-next&#34;&gt;What to do Next&lt;/h2&gt;
&lt;p&gt;If you enjoyed this, you may also want to try receiving METEOR, GOES, or HRPT.
These both use digital downlinks, which are a bit harder to work with, however
they provide much higher-resolution color imagery.&lt;/p&gt;
&lt;p&gt;GOES satellites are in geostationary orbits, which allow them to provide &amp;lsquo;full-
disk&amp;rsquo; (i.e. a picture of the whole earth).&lt;/p&gt;
&lt;p&gt;Amateur satcom is a fun hobby and gives you bragging rights to say you&amp;rsquo;ve
downloaded images directly off of weather satellites in orbit.&lt;/p&gt;
&lt;h2 id=&#34;additional-resources&#34;&gt;Additional Resources&lt;/h2&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://rtl-sdr.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RTL-SDR Blog&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>My Homelab</title>
        <link>https://ben-p.dev/p/my-homelab/</link>
        <pubDate>Sat, 27 Mar 2021 00:00:00 +0000</pubDate>
        
        <guid>https://ben-p.dev/p/my-homelab/</guid>
        <description>&lt;img src="https://ben-p.dev/p/my-homelab/header.jpg" alt="Featured image of post My Homelab" /&gt;&lt;h3 id=&#34;hardware&#34;&gt;Hardware&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Servers&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dell R710 II
&lt;ul&gt;
&lt;li&gt;Dual Xeon X5670s&lt;/li&gt;
&lt;li&gt;32GiB RAM&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Networking&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Switches&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TP-Link TL-SG108E&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wireless APs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linksys EA6900&lt;/li&gt;
&lt;li&gt;Linksys RE6800&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;software&#34;&gt;Software&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;R710 - Proxmox VE (Hypervisor)
&lt;ul&gt;
&lt;li&gt;OPNsense firewall&lt;/li&gt;
&lt;li&gt;Debian LXC
&lt;ul&gt;
&lt;li&gt;Docker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;workloadsservices&#34;&gt;Workloads/Services&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Proxmox VMs/LXCs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OPNsense firewall&lt;/li&gt;
&lt;li&gt;OpenMediaVault NAS&lt;/li&gt;
&lt;li&gt;Zabbix (Monitoring)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Docker&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Home Assistant&lt;/li&gt;
&lt;li&gt;NGINX Proxy Manager&lt;/li&gt;
&lt;li&gt;Portainer&lt;/li&gt;
&lt;li&gt;Heimdall (Dashboard of all services)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Other&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OctoPrint&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Github Pages with Hugo</title>
        <link>https://ben-p.dev/p/github-pages-hugo/</link>
        <pubDate>Thu, 25 Mar 2021 18:53:44 -0400</pubDate>
        
        <guid>https://ben-p.dev/p/github-pages-hugo/</guid>
        <description>&lt;h1 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#introduction&#34; &gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#getting-started&#34; &gt;Getting Started&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#prepare-your-environment&#34; &gt;Prepare your environment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#building-your-site&#34; &gt;Building your site&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;I had a bit of difficulty setting up Hugo to work with Github Pages,
so I decided to document how I was able to make it work.&lt;/p&gt;
&lt;h2 id=&#34;getting-started&#34;&gt;Getting Started&lt;/h2&gt;
&lt;p&gt;This guide assumes you already have a Hugo site. If you do not,
you can learn how to &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/getting-started/quick-start/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You will also need a Github Pages repo setup, these are pretty simple,
and you can use &lt;a class=&#34;link&#34; href=&#34;https://guides.github.com/features/pages/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;this&lt;/a&gt; guide.&lt;/p&gt;
&lt;p&gt;Both of these are pretty simple to setup, but if you have any questions,
ask Google first, but if that doesn&amp;rsquo;t work, leave me an &lt;a class=&#34;link&#34; href=&#34;mailto:ben@ben-p.dev&#34; &gt;email&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;prepare-your-environment&#34;&gt;Prepare your environment&lt;/h2&gt;
&lt;p&gt;After you&amp;rsquo;ve created your site repo, delete the contents. Once that&amp;rsquo;s done,
head to wherever you wish to keep it on your local machine and clone it.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;re done, &lt;code&gt;cd&lt;/code&gt; to it and create an empty file named &lt;code&gt;.nojekyll&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;touch .nojekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After that, go ahead and generate your site with Hugo. If you&amp;rsquo;ve already made your site and want to
migrate to Github Pages, just copy the contents over to the new repo.&lt;/p&gt;
&lt;p&gt;Now, we&amp;rsquo;ll need to edit the &lt;code&gt;config.toml&lt;/code&gt; to configure the site to be compatible with Github Pages.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-Bash&#34; data-lang=&#34;Bash&#34;&gt;vim config.toml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add the following line, under the top set of variables&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-TOML&#34; data-lang=&#34;TOML&#34;&gt;&lt;span class=&#34;nx&#34;&gt;publishDir&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;docs&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Go to your Repo&amp;gt;Settings&amp;gt;Github Pages&amp;gt; and set &lt;code&gt;Source&lt;/code&gt; directory to &lt;code&gt;/docs&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;building-your-site&#34;&gt;Building your site&lt;/h2&gt;
&lt;p&gt;Go to the folder where you have your site and run &lt;code&gt;hugo&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now that your site has been built, add all, commit, and push to Github.&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
