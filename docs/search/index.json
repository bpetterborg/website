[{"content":"Table of Contents  Introduction Hardware Software 10/10  Introduction I am building a roomba-like \u0026ldquo;vacuum\u0026rdquo; based on Vex hardware. It\u0026rsquo;s not really a vacuum, but a very strong magnet to pick up small pieces of metal off of the STEM lab floor.\nThe point of this is to learn all sorts of technologies relating to robotics, but also to struture a large program.\nAs far as the point of me logging this, it is more for myself. I will already be documenting this in a journal, so I may as well share my solutions with other people.\nHardware I\u0026rsquo;ll add a diagram and pictures later, it is too much of a work-in-progress right now.\nParts I\u0026rsquo;ll update this list as I go, expect this to change. It is currently incomplete.\n 2x Vex 393 Motor, with standard gearing 2x Vex MC29 motor controller Raspberry Pi 3B 5V step-down converter Vex 7.2V 3000mAH battery  How it\u0026rsquo;s all connected I\u0026rsquo;ll add a diagram later.\nSoftware Same thing here.\nYou can view code on my github repo.\nThe Raspberry Pi serves as the upper computer, and the Vex brain the lower computer. The Pi does more of the high-level work, such as mapping, image processing, and positioning. The Vex brain does more of the lower-level tasks such as getting data from the sensors (sonar, collision detection), and controlling the motors.\nDue to the poor documentation of Vex\u0026rsquo;s hardware, I will be doing it solely on the RPi. It is less interesting but ehh, it\u0026rsquo;s easier.\nI\u0026rsquo;ll add some more details later, if you are that interested, check the repo.\n10/10 Current Progress  Started building the robot Working on code  Motor control (motors.py)  Mostly finished Unsure about interfacing with the MC29s, but it\u0026rsquo;s a good start.      Tasks  Finish building the robot Figure out batteries  Get the stuff to wire them   Finish motor control code Test motor control code  ","date":"2021-10-11T00:00:00Z","permalink":"https://ben-p.dev/p/vex-vacuum/","title":"Devlog(s): Vex-based \"Roomba\""},{"content":"Table of Contents  Introduction Getting Started Receiving Decoding What to do Next Additional Resources  Introduction NOAA has weather satellites that are easy to receive with basic and inexpensive equipment. This guide will show how to receive and decode the downlink of these satellites.\nRoscosmos also operates METEOR satellites, which are relatively easy to receive and decode, which can be done with the same hardware, however this guide will not detail how to do this.\nWe will be using NOAA-15, NOAA-18, and NOAA-19, on the APT downlink as these are analog FM with a λ = ~2.2 meters, which is very easy to work with.\nGetting Started Software You will need an SDR program, like CubicSDR (which I will be using for this), however other programs, such as GQRX, SDR#, SDR++, or SigDigger will also work.\nIf you are using an Android phone or tablet, I recommend RF-Analyzer\nYou will also need a program to decode the audio. I will use NOAA APT\nHardware I recommend the RTL-SDR kit, it as a adjustable and portable dipole antenna, an RG-174 extension cable, and the dongle itself.\nYou will also need a laptop, an Android phone, or a tablet. Brighter screens are better since you will be outside.\nReceieving A few minutes before the satellite will be above, setup your antenna. Each element of the dipole should be ~53cm long, 120° apart, with \u0026lsquo;V\u0026rsquo; facing south. The center conductor of the coax should be connected to the element facing right. If it\u0026rsquo;s not, simply flip the antenna over.\nOpen CubicSDR and select RTL2832U, RTL-SDR, or something else that starts with \u0026lsquo;Realtek\u0026rsquo;. Tune your receiver to the appropriate satellite, per the table below.\n   Satellite Freq. (MHz)      NOAA-15 137.61    NOAA-18 137.91    NOAA-19 137.1     Set the demodulator to WFM (Wide FM), and the receive bandwidth to ~40kHz, to account for doppler shift.\nUnder recording, set the path, and the squelch to \u0026lsquo;Record Always\u0026rsquo;. Begin the recording ~1 minute before the satellite will pass over. It\u0026rsquo;ll take ~15min, so have something to keep yourself occupied.\nOnce the satellite passes over the horizon and the signal fades away, you can go ahead and stop the recording.\nDecoding Open NOAA APT and open your file. You can skip through the rest of the menus, then save the image.\nCongrats! You\u0026rsquo;ve pulled images directly from weather satellites in orbit!\nWhat to do Next If you enjoyed this, you may also want to try receiving METEOR, GOES, or HRPT. These both use digital downlinks, which are a bit harder to work with, however they provide much higher-resolution color imagery.\nGOES satellites are in geostationary orbits, which allow them to provide \u0026lsquo;full- disk\u0026rsquo; (i.e. a picture of the whole earth).\nAmateur satcom is a fun hobby and gives you bragging rights to say you\u0026rsquo;ve downloaded images directly off of weather satellites in orbit.\nAdditional Resources RTL-SDR Blog\n","date":"2021-05-12T20:00:00-04:00","image":"https://ben-p.dev/p/apt-reception/header_huc598d7e7b311dcc7b935db780e4add4c_347620_120x120_fill_q75_box_smart1.jpg","permalink":"https://ben-p.dev/p/apt-reception/","title":"Pull Images Directly from NOAA Weather Satellites"},{"content":"Hardware   Servers\n Dell R710 II  Dual Xeon X5670s 32GiB RAM      Networking\n  Switches\n TP-Link TL-SG108E    Wireless APs\n Linksys EA6900 Linksys RE6800      Software  R710 - Proxmox VE (Hypervisor)  OPNsense firewall Debian LXC  Docker      Workloads/Services   Proxmox VMs/LXCs\n OPNsense firewall OpenMediaVault NAS Zabbix (Monitoring)    Docker\n Home Assistant NGINX Proxy Manager Portainer Heimdall (Dashboard of all services)    Other\n OctoPrint    ","date":"2021-03-27T00:00:00Z","image":"https://ben-p.dev/p/my-homelab/header_hu546b5e911d96e970cd42ab8f81704af3_79380_120x120_fill_q75_box_smart1.jpg","permalink":"https://ben-p.dev/p/my-homelab/","title":"My Homelab"},{"content":"Table of Contents  Introduction Getting Started Prepare your environment Building your site  Introduction I had a bit of difficulty setting up Hugo to work with Github Pages, so I decided to document how I was able to make it work.\nGetting Started This guide assumes you already have a Hugo site. If you do not, you can learn how to here.\nYou will also need a Github Pages repo setup, these are pretty simple, and you can use this guide.\nBoth of these are pretty simple to setup, but if you have any questions, ask Google first, but if that doesn\u0026rsquo;t work, leave me an email\nPrepare your environment After you\u0026rsquo;ve created your site repo, delete the contents. Once that\u0026rsquo;s done, head to wherever you wish to keep it on your local machine and clone it.\nOnce you\u0026rsquo;re done, cd to it and create an empty file named .nojekyll\ntouch .nojekyll After that, go ahead and generate your site with Hugo. If you\u0026rsquo;ve already made your site and want to migrate to Github Pages, just copy the contents over to the new repo.\nNow, we\u0026rsquo;ll need to edit the config.toml to configure the site to be compatible with Github Pages.\nvim config.toml Add the following line, under the top set of variables\npublishDir = \u0026#34;docs\u0026#34; Go to your Repo\u0026gt;Settings\u0026gt;Github Pages\u0026gt; and set Source directory to /docs\nBuilding your site Go to the folder where you have your site and run hugo.\nNow that your site has been built, add all, commit, and push to Github.\n","date":"2021-03-25T18:53:44-04:00","permalink":"https://ben-p.dev/p/github-pages-hugo/","title":"Github Pages with Hugo"}]